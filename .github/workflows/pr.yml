name: CI

on:
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run Selene Linter
        id: selene
        continue-on-error: true  # Prevents workflow from stopping on failure
        uses: AlejandroSuero/selene-linter-action@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: src/

      - name: Save Selene Output to File
        run: |
          # Capture the output of Selene into a file
          selene src/ > selene_output.txt || true

      - name: Clean and Convert ANSI Codes to LaTeX
        run: |
          # Convert the ANSI escape codes to GitHub-compatible LaTeX formatting
          awk '{ 
            gsub(/\x1b\[[0-9;]*m/, "");  # Remove ANSI codes
            if ($0 ~ /warning/) { print "\\textcolor{orange}{\\huge{Warning:}} " $0 }
            else if ($0 ~ /error/) { print "\\textcolor{red}{\\huge{Error:}} " $0 }
            else { print "\\textcolor{black}{\\huge{" $0 "}}" }
          }' selene_output.txt > latex_selene_output.txt

      - name: Capture LaTeX Output into Environment Variable
        run: |
          # Store the LaTeX-formatted contents of the output file into the environment variable
          echo 'SELENE_OUTPUT<<EOF' >> $GITHUB_ENV
          cat latex_selene_output.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Comment on Pull Request
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Selene Linter Report:**
            ${{ env.SELENE_OUTPUT }}
